//////////////////////////////////////////////////////////////////////
//
// Plains Tiny.rmv
//
// Copyright (c) 2000, Stainless Steel Studios, Inc. All rights reserved.
// PROPRIETARY and CONFIDENTIAL.
//
// $Creator: Richard Bishop $
// $Date: 9/13/01 12:31p $
// $Current Version: 1.1 $
// $History
// 	V1.0 to V1.1 
//		-Extended this map to serve 8 players
//		-Added Tigers to 2, 3, 4 player maps
//      V1.1 to V1.2
//		-Pulled in Berries two tiles closer
//
//      V1.2 to V1.3
////		-Added Hippos

//	V1.3 to V1.4
//		-Added more neutrals to disperse the trees better.
//////////////////////////////////////////////////////////////////////

#if			NOTDEFINED(PLAINS_TINY_RMV)
#define			(PLAINS_TINY_RMV,1)

//////////////////////////////////////////////////////////////////////
// Definitions we are required to define for Plains maps
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// Resource

#if OR(IsPaleoEpoch, IsStoneEpoch) 
  #define  (kBerryPerPlayer,    2)
#else
  #define  (kBerryPerPlayer,    1)
#endif

#if Is2Players
//////////////////////////////////////////////////////////////////////
// 2 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	5 

PlaceResourceInRing (Gold, 14, 16)
PlaceResourceInRing (Iron, 15, 17)

//////////////////////////////////////////////////////////////////////
// Resource Limitations
ResourcePlacementLimit (Gold, 		9,	11)
ResourcePlacementLimit (Stone, 		13,	14)
ResourcePlacementLimit (Steel, 		10, 	12)
ResourcePlacementLimit (Berry, 		6,	7)
ResourcePlacementLimit (Tree, 		3,	5)

//////////////////////////////////////////////////////////////////////
// Secondary Resource Placements

#if DEFINED(kWinterMap)
  PlaceWorldUnitInRing (Res-Walrus, 12, 12)
  PlaceWorldUnitInRing (Res-Walrus, 12, 12)
#else 
  PlaceWorldUnitInRing (Res-Hippopotamus, 12, 12)
  PlaceWorldUnitInRing (Res-Hippopotamus, 12, 12)
#endif

//////////////////////////////////////////////////////////////////////
// Agressive Animals

PlaceWorldUnitInRing (Res-Tiger, 25, 25)
PlaceWorldUnitInRing (Res-Tiger, 28, 28)

//////////////////////////////////////////////////////////////////////
// terrain definitions

#define		(kMaxIntElevation,			7)
#define		(kElevationScale,				Between(.6, .6))
#define		(kHeightMapChaos,				Between(20, 20))
											
#define		(kMinimumStartPositionToMapEdge		1)
#define		(kOuterPushFromMapCenter		20)
#define		(kInnerPushFromMapCenter 		0)
#define		(kConvergentSampleSize,			32) 
#define		(kConvergentThreshold,			20000)		

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		75.0)
#define		(kPlayerInnerRadius,			0.7)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.1, 0.1))
#define		(kPlayerPercentFlat,			Between(0.8, 0.8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.1)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(2, 2))
#define		(kInnerNeutralPercentLand,		0.15)
#define		(kInnerNeutralPercentFlat,		Between(0.2, 0.2))
#define		(kInnerNeutralTreePercentage,	      0.05)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(4, 4))
#define		(kOuterNeutralPercentLand,		0.4)
#define		(kOuterNeutralPercentFlat,		Between(0.1, 0.1))
#define		(kOuterNeutralTreePercentage,	      0.15)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			2)
#define		(kResourceToEdgeDistance,		1)
#define		(kResourceToWaterDistance,		1)

#define		(kAnimalPerPlayer,				0)
#define		(kAnimalPerNeutral,				0)

#define		(kBerryPerNeutral,				0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				2)

#define		(kOilPerPlayer,					0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,				2)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,				2)

#define		(kTreePerPlayer,				Between(3,4))
#define		(kTreePerNeutral,				0)

//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				7.0)
#define		(kForestsPerPlayer,				2)
#define		(kForestChaosLevel,				1)
#define		(kMaxClumpsPerForest,			      2)



#elif Is3Players
//////////////////////////////////////////////////////////////////////
// 3 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	4 

//////////////////////////////////////////////////////////////////////
// Resource Limitations
ResourcePlacementLimit (Gold, 		8,	10)
ResourcePlacementLimit (Steel, 		10, 	12)
ResourcePlacementLimit (Berry, 		6,	7)
ResourcePlacementLimit (Tree, 		3,	6)

#if DEFINED(kWinterMap)
  PlaceWorldUnitInRing (Res-Walrus, 12, 12)
  PlaceWorldUnitInRing (Res-Walrus, 12, 12)
#else 
  PlaceWorldUnitInRing (Res-Hippopotamus, 12, 12)
  PlaceWorldUnitInRing (Res-Hippopotamus, 12, 12)
#endif

PlaceResourceInRing (Gold, 14, 16)
PlaceResourceInRing (Iron, 15, 17)

PlaceWorldUnitInRing (Res-Tiger, 22, 22)
PlaceWorldUnitInRing (Res-Tiger, 24, 24)

//////////////////////////////////////////////////////////////////////
// terrain definitions

#define		(kMaxIntElevation,			7)
#define		(kElevationScale,				Between(.6, .6))
#define		(kHeightMapChaos,				Between(20, 20))
											
#define		(kMinimumStartPositionToMapEdge		1)
#define		(kOuterPushFromMapCenter		20)
#define		(kInnerPushFromMapCenter 		0)		

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		75.0)
#define		(kPlayerInnerRadius,			0.7)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.8, 0.8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.1)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(2, 2))
#define		(kInnerNeutralPercentLand,		0.15)
#define		(kInnerNeutralPercentFlat,		Between(0.2, 0.2))
#define		(kInnerNeutralTreePercentage,	      0.05)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(4, 4))
#define		(kOuterNeutralPercentLand,		0.4)
#define		(kOuterNeutralPercentFlat,		Between(0.1, 0.1))
#define		(kOuterNeutralTreePercentage,	      0.15)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			2)
#define		(kResourceToEdgeDistance,		1)
#define		(kResourceToWaterDistance,		1)

#define		(kAnimalPerPlayer,				0)
#define		(kAnimalPerNeutral,				0)


#define		(kBerryPerNeutral,				0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				3)

#define		(kOilPerPlayer,					0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,				3)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,				1)

#define		(kTreePerPlayer,				Between(3,4))
#define		(kTreePerNeutral,				0)

//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				7.0)
#define		(kForestsPerPlayer,				2)
#define		(kForestChaosLevel,				1)
#define		(kMaxClumpsPerForest,			      2)

#elif Is4Players
//////////////////////////////////////////////////////////////////////
// 4 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	4 

//////////////////////////////////////////////////////////////////////
// Resource Limitations
ResourcePlacementLimit (Gold, 		8,	10)
ResourcePlacementLimit (Steel, 		10, 	12)
ResourcePlacementLimit (Berry, 		6,	7)
ResourcePlacementLimit (Tree, 		3,	6)

#if DEFINED(kWinterMap)
  PlaceWorldUnitInRing (Res-Walrus, 12, 12)
  PlaceWorldUnitInRing (Res-Walrus, 12, 12)
#else 
  PlaceWorldUnitInRing (Res-Hippopotamus, 12, 12)
  PlaceWorldUnitInRing (Res-Hippopotamus, 12, 12)
#endif

PlaceWorldUnitInRing (Res-Tiger, 22, 22)

//////////////////////////////////////////////////////////////////////
// terrain definitions

#define		(kMaxIntElevation,			6)
#define		(kElevationScale,				Between(.6, .6))
#define		(kHeightMapChaos,				Between(20, 20))
											
#define		(kMinimumStartPositionToMapEdge		1)
#define		(kOuterPushFromMapCenter		20)
#define		(kInnerPushFromMapCenter 		0)		

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		75.0)
#define		(kPlayerInnerRadius,			0.7)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.8, 0.8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.1)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(2, 2))
#define		(kInnerNeutralPercentLand,		0.15)
#define		(kInnerNeutralPercentFlat,		Between(0.2, 0.2))
#define		(kInnerNeutralTreePercentage,	      0.05)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(4, 4))
#define		(kOuterNeutralPercentLand,		0.4)
#define		(kOuterNeutralPercentFlat,		Between(0.1, 0.1))
#define		(kOuterNeutralTreePercentage,	      0.15)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			2)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		3)

#define		(kAnimalPerPlayer,				0)
#define		(kAnimalPerNeutral,				0)


#define		(kBerryPerNeutral,				0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				5)

#define		(kOilPerPlayer,					0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,				5)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,				2)

#define		(kTreePerPlayer,				Between(3,4))
#define		(kTreePerNeutral,				0)

//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				7.0)
#define		(kForestsPerPlayer,				2)
#define		(kForestChaosLevel,				1.0)
#define		(kMaxClumpsPerForest,			        2)

#elif Is5Players
//////////////////////////////////////////////////////////////////////
// 5 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	4 

#if DEFINED(kWinterMap)
  PlaceWorldUnitInRing (Res-Walrus, 12, 12)
  PlaceWorldUnitInRing (Res-Walrus, 12, 12)
#else 
  PlaceWorldUnitInRing (Res-Hippopotamus, 12, 12)
  PlaceWorldUnitInRing (Res-Hippopotamus, 12, 12)
#endif

//////////////////////////////////////////////////////////////////////
// Resource Limitations
ResourcePlacementLimit (Gold, 		8,	10)
ResourcePlacementLimit (Steel, 		10, 	12)
ResourcePlacementLimit (Berry, 		6,	7)
ResourcePlacementLimit (Tree, 		3,	6)

//////////////////////////////////////////////////////////////////////
// terrain definitions

#define		(kMaxIntElevation,			7)
#define		(kElevationScale,				Between(.6, .6))
#define		(kHeightMapChaos,				Between(20, 20))
											
#define		(kMinimumStartPositionToMapEdge		1)
#define		(kOuterPushFromMapCenter		20)
#define		(kInnerPushFromMapCenter 		0)		

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		75.0)
#define		(kPlayerInnerRadius,			0.7)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.8, 0.8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.1)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(2, 2))
#define		(kInnerNeutralPercentLand,		0.15)
#define		(kInnerNeutralPercentFlat,		Between(0.2, 0.2))
#define		(kInnerNeutralTreePercentage,	      0.05)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(4, 4))
#define		(kOuterNeutralPercentLand,		0.4)
#define		(kOuterNeutralPercentFlat,		Between(0.1, 0.1))
#define		(kOuterNeutralTreePercentage,	      0.15)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			1)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		1)

#define		(kAnimalPerPlayer,				0)
#define		(kAnimalPerNeutral,				0)


#define		(kBerryPerNeutral,				0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				4)

#define		(kOilPerPlayer,					0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,				3)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,				4)

#define		(kTreePerPlayer,				Between(2,3))
#define		(kTreePerNeutral,				0)

//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				7.0)
#define		(kForestsPerPlayer,				1)
#define		(kForestChaosLevel,				1)
#define		(kMaxClumpsPerForest,			      2)


#elif Is6Players
//////////////////////////////////////////////////////////////////////
// 6 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	3 

//////////////////////////////////////////////////////////////////////
// Resource Limitations
ResourcePlacementLimit (Berry, 		6,	7)
ResourcePlacementLimit (Tree, 		3,	6)

#if DEFINED(kWinterMap)
  PlaceWorldUnitInRing (Res-Walrus, 12, 12)
  PlaceWorldUnitInRing (Res-Walrus, 12, 12)
#else 
  PlaceWorldUnitInRing (Res-Hippopotamus, 12, 12)
  PlaceWorldUnitInRing (Res-Hippopotamus, 12, 12)
#endif

//////////////////////////////////////////////////////////////////////
// terrain definitions

#define		(kMaxIntElevation,			7)
#define		(kElevationScale,				Between(.6, .6))
#define		(kHeightMapChaos,				Between(20, 20))
											
#define		(kMinimumStartPositionToMapEdge		1)
#define		(kOuterPushFromMapCenter		20)
#define		(kInnerPushFromMapCenter 		0)		

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		75.0)
#define		(kPlayerInnerRadius,			0.7)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.8, 0.8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.1)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(2, 2))
#define		(kInnerNeutralPercentLand,		0.15)
#define		(kInnerNeutralPercentFlat,		Between(0.2, 0.2))
#define		(kInnerNeutralTreePercentage,	      0.05)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(4, 4))
#define		(kOuterNeutralPercentLand,		0.4)
#define		(kOuterNeutralPercentFlat,		Between(0.1, 0.1))
#define		(kOuterNeutralTreePercentage,	      0.10)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			2)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		3)

#define		(kAnimalPerPlayer,				0)
#define		(kAnimalPerNeutral,				0)


#define		(kBerryPerNeutral,				0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				3)

#define		(kOilPerPlayer,					0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,				3)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,				2)

#define		(kTreePerPlayer,				Between(2,3))
#define		(kTreePerNeutral,				0)

//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				7.0)
#define		(kForestsPerPlayer,				1)
#define		(kForestChaosLevel,				1)
#define		(kMaxClumpsPerForest,			      2)


#elif Is7Players
//////////////////////////////////////////////////////////////////////
// 7 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	3 

//////////////////////////////////////////////////////////////////////
// Resource Limitations
ResourcePlacementLimit (Gold, 		8,	10)
ResourcePlacementLimit (Steel, 		10, 	12)
ResourcePlacementLimit (Berry, 		6,	7)
ResourcePlacementLimit (Tree, 		3,	6)

#if DEFINED(kWinterMap)
  PlaceWorldUnitInRing (Res-Walrus, 12, 12)
#else 
  PlaceWorldUnitInRing (Res-Hippopotamus, 12, 12)
#endif

//////////////////////////////////////////////////////////////////////
// terrain definitions

#define		(kMaxIntElevation,			7)
#define		(kElevationScale,				Between(.6, .6))
#define		(kHeightMapChaos,				Between(20, 20))
											
#define		(kMinimumStartPositionToMapEdge		1)
#define		(kOuterPushFromMapCenter		20)
#define		(kInnerPushFromMapCenter 		0)		

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		75.0)
#define		(kPlayerInnerRadius,			0.7)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.8, 0.8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.1)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(2, 2))
#define		(kInnerNeutralPercentLand,		0.15)
#define		(kInnerNeutralPercentFlat,		Between(0.2, 0.2))
#define		(kInnerNeutralTreePercentage,	      0.05)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(4, 4))
#define		(kOuterNeutralPercentLand,		0.4)
#define		(kOuterNeutralPercentFlat,		Between(0.1, 0.1))
#define		(kOuterNeutralTreePercentage,	      0.15)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			2)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		3)

#define		(kAnimalPerPlayer,				0)
#define		(kAnimalPerNeutral,				0)


#define		(kBerryPerNeutral,				0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				3)

#define		(kOilPerPlayer,					0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,				3)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,				2)

#define		(kTreePerPlayer,				Between(2,3))
#define		(kTreePerNeutral,				0)

//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				7.0)
#define		(kForestsPerPlayer,				1)
#define		(kForestChaosLevel,				1)
#define		(kMaxClumpsPerForest,			      2)

#elif Is8Players
//////////////////////////////////////////////////////////////////////
// 8 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	4 

//////////////////////////////////////////////////////////////////////
// Resource Limitations
ResourcePlacementLimit (Gold, 		5,	7)
ResourcePlacementLimit (Steel, 		5, 	7)
ResourcePlacementLimit (Berry, 		5,	7)
ResourcePlacementLimit (Tree, 		3,	6)

#if DEFINED(kWinterMap)
  PlaceWorldUnitInRing (Res-Walrus, 12, 12)
#else 
  PlaceWorldUnitInRing (Res-Hippopotamus, 12, 12)
#endif

//////////////////////////////////////////////////////////////////////
// terrain definitions

#define		(kMaxIntElevation,			7)
#define		(kElevationScale,				Between(.6, .6))
#define		(kHeightMapChaos,				Between(20, 20))
											
#define		(kMinimumStartPositionToMapEdge		1)
#define		(kOuterPushFromMapCenter		20)
#define		(kInnerPushFromMapCenter 		0)		

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		75.0)
#define		(kPlayerInnerRadius,			0.7)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.8, 0.8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.1)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(2, 2))
#define		(kInnerNeutralPercentLand,		0.15)
#define		(kInnerNeutralPercentFlat,		Between(0.2, 0.2))
#define		(kInnerNeutralTreePercentage,	      0.05)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(4, 4))
#define		(kOuterNeutralPercentLand,		0.4)
#define		(kOuterNeutralPercentFlat,		Between(0.1, 0.1))
#define		(kOuterNeutralTreePercentage,	      0.15)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			2)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		3)

#define		(kAnimalPerPlayer,				0)
#define		(kAnimalPerNeutral,				0)


#define		(kBerryPerNeutral,				0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				3)

#define		(kOilPerPlayer,					0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,				3)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,				2)

#define		(kTreePerPlayer,				Between(2,3))
#define		(kTreePerNeutral,				0)

//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				7.0)
#define		(kForestsPerPlayer,				1)
#define		(kForestChaosLevel,				1)
#define		(kMaxClumpsPerForest,			      2)

#elif Is9Players
//////////////////////////////////////////////////////////////////////
// 9 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			12)
#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(20, 50))

#define		(kMinimumStartPositionToMapEdge	1)
#define		(kOuterPushFromMapCenter		20)
#define		(kInnerPushFromMapCenter 		0)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		32.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.95, .95))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.15)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.3)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(4, 4))
#define		(kInnerNeutralPercentLand,		0.14)
#define		(kInnerNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kInnerNeutralTreePercentage,	      0.15)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(9, 9))
#define		(kOuterNeutralPercentLand,		0.3)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.2)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)


#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				6)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			6)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			2)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				6.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				0.1)
#define		(kMaxClumpsPerForest,			      2)


#elif Is10Players
//////////////////////////////////////////////////////////////////////
// 10 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			12)
#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(20, 50))

#define		(kMinimumStartPositionToMapEdge	1)
#define		(kOuterPushFromMapCenter		20)
#define		(kInnerPushFromMapCenter 		0)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		32.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.95, .95))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.15)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.3)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(4, 4))
#define		(kInnerNeutralPercentLand,		0.14)
#define		(kInnerNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kInnerNeutralTreePercentage,	      0.15)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(9, 9))
#define		(kOuterNeutralPercentLand,		0.3)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.2)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)


#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				6)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			6)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			2)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				6.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				0.1)
#define		(kMaxClumpsPerForest,			      2)

#elif Is11Players
//////////////////////////////////////////////////////////////////////
// 11 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			12)
#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(20, 50))

#define		(kMinimumStartPositionToMapEdge	1)
#define		(kOuterPushFromMapCenter		20)
#define		(kInnerPushFromMapCenter 		0)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		32.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.95, .95))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.15)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.3)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(4, 4))
#define		(kInnerNeutralPercentLand,		0.14)
#define		(kInnerNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kInnerNeutralTreePercentage,	      0.15)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(9, 9))
#define		(kOuterNeutralPercentLand,		0.3)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.2)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)


#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				6)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			6)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			2)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				6.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				0.1)
#define		(kMaxClumpsPerForest,			      2)

#elif Is12Players
//////////////////////////////////////////////////////////////////////
// 12 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			12)
#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(20, 50))

#define		(kMinimumStartPositionToMapEdge	1)
#define		(kOuterPushFromMapCenter		20)
#define		(kInnerPushFromMapCenter 		0)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		32.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.95, .95))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.15)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.3)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(4, 4))
#define		(kInnerNeutralPercentLand,		0.14)
#define		(kInnerNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kInnerNeutralTreePercentage,	      0.15)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(9, 9))
#define		(kOuterNeutralPercentLand,		0.3)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.2)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)


#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				6)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			6)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			2)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				6.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				0.1)
#define		(kMaxClumpsPerForest,			      2)


#elif Is13Players
//////////////////////////////////////////////////////////////////////
// 13 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			12)
#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(20, 50))

#define		(kMinimumStartPositionToMapEdge	1)
#define		(kOuterPushFromMapCenter		20)
#define		(kInnerPushFromMapCenter 		0)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		32.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.95, .95))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.15)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.3)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(4, 4))
#define		(kInnerNeutralPercentLand,		0.14)
#define		(kInnerNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kInnerNeutralTreePercentage,	      0.15)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(9, 9))
#define		(kOuterNeutralPercentLand,		0.3)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.2)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)


#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				6)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			6)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			2)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				6.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				0.1)
#define		(kMaxClumpsPerForest,			      2)


#elif Is14Players
//////////////////////////////////////////////////////////////////////
// 14 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			12)
#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(20, 50))

#define		(kMinimumStartPositionToMapEdge	1)
#define		(kOuterPushFromMapCenter		20)
#define		(kInnerPushFromMapCenter 		0)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		32.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.95, .95))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.15)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.3)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(4, 4))
#define		(kInnerNeutralPercentLand,		0.14)
#define		(kInnerNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kInnerNeutralTreePercentage,	      0.15)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(9, 9))
#define		(kOuterNeutralPercentLand,		0.3)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.2)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)


#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				6)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			6)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			2)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				6.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				0.1)
#define		(kMaxClumpsPerForest,			      2)


#elif Is15Players
//////////////////////////////////////////////////////////////////////
// 15 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			12)
#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(20, 50))

#define		(kMinimumStartPositionToMapEdge	1)
#define		(kOuterPushFromMapCenter		20)
#define		(kInnerPushFromMapCenter 		0)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		32.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.95, .95))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.15)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.3)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(4, 4))
#define		(kInnerNeutralPercentLand,		0.14)
#define		(kInnerNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kInnerNeutralTreePercentage,	      0.15)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(9, 9))
#define		(kOuterNeutralPercentLand,		0.3)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.2)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)


#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				6)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			6)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			2)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				6.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				0.1)
#define		(kMaxClumpsPerForest,			      2)


#elif Is16Players
//////////////////////////////////////////////////////////////////////
// 16 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			12)
#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(20, 50))

#define		(kMinimumStartPositionToMapEdge	1)
#define		(kOuterPushFromMapCenter		20)
#define		(kInnerPushFromMapCenter 		0)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		32.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.95, .95))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.15)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.3)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(4, 4))
#define		(kInnerNeutralPercentLand,		0.14)
#define		(kInnerNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kInnerNeutralTreePercentage,	      0.15)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(9, 9))
#define		(kOuterNeutralPercentLand,		0.3)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.2)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)


#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				6)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			6)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			2)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				6.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				0.1)
#define		(kMaxClumpsPerForest,			      2)


//////////////////////////////////////////////////////////////////////
// End of if...elif... command
#endif

#endif		// NOTDEFINED(PLAINS_TINY_RMV)