//////////////////////////////////////////////////////////////////////
//
// Plains Gigantic.rmv
//
// Plains definitions for gigantic maps.
//
// Copyright (c) 2000, Stainless Steel Studios, Inc. All rights reserved.
// PROPRIETARY and CONFIDENTIAL.
//
// $Creator: Richard Bishop $
//	V1.0 to V1.3
//		-Added Tigers to all maps
//		-Added Hippos to all maps
// Rick Goodman - Convergent Threshold to 1
//   so players do not all start on one side of the map
//
//////////////////////////////////////////////////////////////////////

#if			NOTDEFINED(PLAINS_GIGANTIC_RMV)
#define		(PLAINS_GIGANTIC_RMV,1)

#if OR(IsPaleoEpoch, IsStoneEpoch) 
  #define  (kBerryPerPlayer,    2)
#else
  #define  (kBerryPerPlayer,    1)
#endif

#define		(kConvergentSampleSize,			5) 
#define		(kConvergentThreshold,			8)

//////////////////////////////////////////////////////////////////////
// Placing Aggressive Animals

PlaceWorldUnitInRing (Res-Tiger, 43, 49)
PlaceWorldUnitInRing (Res-Tiger, 40, 45)

//////////////////////////////////////////////////////////////////////
// Placing Starting Hippos

#if DEFINED(kWinterMap)
  PlaceWorldUnitInRing (Res-Walrus, 12, 12)
  PlaceWorldUnitInRing (Res-Walrus, 12, 12)
#else 
  PlaceWorldUnitInRing (Res-Hippopotamus, 12, 12)
  PlaceWorldUnitInRing (Res-Hippopotamus, 12, 12)
#endif

//////////////////////////////////////////////////////////////////////
// Resource

PlaceResourceInRing (Gold, 14, 16)
PlaceResourceInRing (Iron, 15, 17)

PlaceResourceInRing (Gold, 30, 34)
PlaceResourceInRing (Iron, 30, 34)
PlaceResourceInRing (Stone, 20, 24)

//////////////////////////////////////////////////////////////////////
// Resource Limitations
ResourcePlacementLimit (Gold, 	10,	12)
ResourcePlacementLimit (Steel, 	10, 	12)
ResourcePlacementLimit (Berry, 	6,	7)
ResourcePlacementLimit (Tree, 	3,	5)

#if Is2Players
//////////////////////////////////////////////////////////////////////
// 2 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	7 

//////////////////////////////////////////////////////////////////////
// terrain definitions
HeightMapSmoothness					0
#define		(kMaxIntElevation,			12)
#define		(kElevationScale,				Between(.5, .5))
#define		(kHeightMapChaos,				Between(15, 15))
											
#define		(kMinimumStartPositionToMapEdge		5)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)	
	
#define		(kConvergentSampleSize,			3) 
#define		(kConvergentThreshold,			15)

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		75.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.8, 0.8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.01)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(20, 20))
#define		(kInnerNeutralPercentLand,		0.25)
#define		(kInnerNeutralPercentFlat,		Between(0.4, 0.4))
#define		(kInnerNeutralTreePercentage,	      0.08)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(45, 45))
#define		(kOuterNeutralPercentLand,		0.6)
#define		(kOuterNeutralPercentFlat,		Between(0.7, 0.7))
#define		(kOuterNeutralTreePercentage,	      0.09)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			2)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		3)

#define		(kAnimalPerPlayer,				0)
#define		(kAnimalPerNeutral,				0)

#define		(kBerryPerPlayer,				1)
#define		(kBerryPerNeutral,				0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				9)

#define		(kOilPerPlayer,					0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,				9)

#define		(kStonePerPlayer,				0)
#define		(kStonePerNeutral,				3)

#define		(kTreePerPlayer,				Between(2, 3))
#define		(kTreePerNeutral,				0)

//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				7.0)
#define		(kForestsPerPlayer,				2)
#define		(kForestChaosLevel,				1)
#define		(kMaxClumpsPerForest,			      2)

#elif Is3Players
//////////////////////////////////////////////////////////////////////
// 3 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	7 

//////////////////////////////////////////////////////////////////////
// terrain definitions
HeightMapSmoothness					0
#define		(kMaxIntElevation,			12)
#define		(kElevationScale,				Between(.5, .5))
#define		(kHeightMapChaos,				Between(15, 15))
											
#define		(kMinimumStartPositionToMapEdge		5)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)	
	
#define		(kConvergentSampleSize,			32) 
#define		(kConvergentThreshold,			1)	

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		75.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.8, 0.8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.01)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(20, 20))
#define		(kInnerNeutralPercentLand,		0.2)
#define		(kInnerNeutralPercentFlat,		Between(0.4, 0.4))
#define		(kInnerNeutralTreePercentage,	      0.08)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(45, 45))
#define		(kOuterNeutralPercentLand,		0.5)
#define		(kOuterNeutralPercentFlat,		Between(0.1, 0.1))
#define		(kOuterNeutralTreePercentage,	      0.09)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			2)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		3)

#define		(kAnimalPerPlayer,				0)
#define		(kAnimalPerNeutral,				0)

#define		(kBerryPerPlayer,				1)
#define		(kBerryPerNeutral,				0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				10)

#define		(kOilPerPlayer,					0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,				10)

#define		(kStonePerPlayer,				0)
#define		(kStonePerNeutral,				3)

#define		(kTreePerPlayer,				Between(2, 3))
#define		(kTreePerNeutral,				0)

//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				7.0)
#define		(kForestsPerPlayer,				2)
#define		(kForestChaosLevel,				1)
#define		(kMaxClumpsPerForest,			      2)


#elif Is4Players
//////////////////////////////////////////////////////////////////////
// 4 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	7 

//////////////////////////////////////////////////////////////////////
// terrain definitions
HeightMapSmoothness					0
#define		(kMaxIntElevation,			12)
#define		(kElevationScale,				Between(.5, .5))
#define		(kHeightMapChaos,				Between(15, 15))
											
#define		(kMinimumStartPositionToMapEdge		5)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)	
	
#define		(kConvergentSampleSize,			32) 
#define		(kConvergentThreshold,			1)

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		75.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.8, 0.8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.01)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(20, 20))
#define		(kInnerNeutralPercentLand,		0.2)
#define		(kInnerNeutralPercentFlat,		Between(0.4, 0.4))
#define		(kInnerNeutralTreePercentage,	      0.08)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(45, 45))
#define		(kOuterNeutralPercentLand,		0.5)
#define		(kOuterNeutralPercentFlat,		Between(0.1, 0.1))
#define		(kOuterNeutralTreePercentage,	      0.09)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			2)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		3)

#define		(kAnimalPerPlayer,				0)
#define		(kAnimalPerNeutral,				0)

#define		(kBerryPerPlayer,				1)
#define		(kBerryPerNeutral,				0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				10)

#define		(kOilPerPlayer,					0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,				10)

#define		(kStonePerPlayer,				0)
#define		(kStonePerNeutral,				3)

#define		(kTreePerPlayer,				Between(2, 3))
#define		(kTreePerNeutral,				0)

//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				7.0)
#define		(kForestsPerPlayer,				2)
#define		(kForestChaosLevel,				1)
#define		(kMaxClumpsPerForest,			      2)

#elif Is5Players
//////////////////////////////////////////////////////////////////////
// 5 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	7 

//////////////////////////////////////////////////////////////////////
// terrain definitions
HeightMapSmoothness					0
#define		(kMaxIntElevation,			12)
#define		(kElevationScale,				Between(.5, .5))
#define		(kHeightMapChaos,				Between(15, 15))
											
#define		(kMinimumStartPositionToMapEdge		5)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)	
	
#define		(kConvergentSampleSize,			32) 
#define		(kConvergentThreshold,			1)	

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		75.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.8, 0.8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.01)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(20, 20))
#define		(kInnerNeutralPercentLand,		0.2)
#define		(kInnerNeutralPercentFlat,		Between(0.4, 0.4))
#define		(kInnerNeutralTreePercentage,	      0.08)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(45, 45))
#define		(kOuterNeutralPercentLand,		0.5)
#define		(kOuterNeutralPercentFlat,		Between(0.1, 0.1))
#define		(kOuterNeutralTreePercentage,	      0.09)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			2)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		3)

#define		(kAnimalPerPlayer,				0)
#define		(kAnimalPerNeutral,				0)

#define		(kBerryPerPlayer,				1)
#define		(kBerryPerNeutral,				0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				10)

#define		(kOilPerPlayer,					0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,				10)

#define		(kStonePerPlayer,				0)
#define		(kStonePerNeutral,				3)

#define		(kTreePerPlayer,				Between(2, 3))
#define		(kTreePerNeutral,				0)

//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				7.0)
#define		(kForestsPerPlayer,				2)
#define		(kForestChaosLevel,				1)
#define		(kMaxClumpsPerForest,			      2)

#elif Is6Players
//////////////////////////////////////////////////////////////////////
// 6 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	6 

//////////////////////////////////////////////////////////////////////
// terrain definitions
HeightMapSmoothness					0
#define		(kMaxIntElevation,			12)
#define		(kElevationScale,				Between(.5, .5))
#define		(kHeightMapChaos,				Between(15, 15))
											
#define		(kMinimumStartPositionToMapEdge		5)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)	
	
#define		(kConvergentSampleSize,			32) 
#define		(kConvergentThreshold,			1)	

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		75.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.8, 0.8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.01)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(20, 20))
#define		(kInnerNeutralPercentLand,		0.2)
#define		(kInnerNeutralPercentFlat,		Between(0.4, 0.4))
#define		(kInnerNeutralTreePercentage,	      0.08)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(45, 45))
#define		(kOuterNeutralPercentLand,		0.5)
#define		(kOuterNeutralPercentFlat,		Between(0.1, 0.1))
#define		(kOuterNeutralTreePercentage,	      0.09)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			2)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		3)

#define		(kAnimalPerPlayer,				0)
#define		(kAnimalPerNeutral,				0)

#define		(kBerryPerPlayer,				1)
#define		(kBerryPerNeutral,				0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				10)

#define		(kOilPerPlayer,					0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,				10)

#define		(kStonePerPlayer,				0)
#define		(kStonePerNeutral,				3)

#define		(kTreePerPlayer,				Between(2, 3))
#define		(kTreePerNeutral,				0)

//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				7.0)
#define		(kForestsPerPlayer,				2)
#define		(kForestChaosLevel,				1)
#define		(kMaxClumpsPerForest,			      2)

#elif Is7Players
//////////////////////////////////////////////////////////////////////
// 7 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	6 

//////////////////////////////////////////////////////////////////////
// terrain definitions
HeightMapSmoothness					0
#define		(kMaxIntElevation,			12)
#define		(kElevationScale,				Between(.5, .5))
#define		(kHeightMapChaos,				Between(15, 15))
											
#define		(kMinimumStartPositionToMapEdge		5)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)	
	
#define		(kConvergentSampleSize,			32) 
#define		(kConvergentThreshold,			8)		

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		75.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.8, 0.8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.01)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(20, 20))
#define		(kInnerNeutralPercentLand,		0.2)
#define		(kInnerNeutralPercentFlat,		Between(0.4, 0.4))
#define		(kInnerNeutralTreePercentage,	      0.08)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(45, 45))
#define		(kOuterNeutralPercentLand,		0.5)
#define		(kOuterNeutralPercentFlat,		Between(0.1, 0.1))
#define		(kOuterNeutralTreePercentage,	      0.09)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			2)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		3)

#define		(kAnimalPerPlayer,				0)
#define		(kAnimalPerNeutral,				0)

#define		(kBerryPerPlayer,				1)
#define		(kBerryPerNeutral,				0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				10)

#define		(kOilPerPlayer,					0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,				10)

#define		(kStonePerPlayer,				0)
#define		(kStonePerNeutral,				3)

#define		(kTreePerPlayer,				Between(2, 3))
#define		(kTreePerNeutral,				0)

//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				7.0)
#define		(kForestsPerPlayer,				2)
#define		(kForestChaosLevel,				1)
#define		(kMaxClumpsPerForest,			      2)

#elif Is8Players
//////////////////////////////////////////////////////////////////////
// 8 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	6 

//////////////////////////////////////////////////////////////////////
// terrain definitions
HeightMapSmoothness					0
#define		(kMaxIntElevation,			12)
#define		(kElevationScale,				Between(.5, .5))
#define		(kHeightMapChaos,				Between(15, 15))
											
#define		(kMinimumStartPositionToMapEdge		5)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)	
	
#define		(kConvergentSampleSize,			32) 
#define		(kConvergentThreshold,			1)		

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		75.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.8, 0.8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.01)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(20, 20))
#define		(kInnerNeutralPercentLand,		0.2)
#define		(kInnerNeutralPercentFlat,		Between(0.4, 0.4))
#define		(kInnerNeutralTreePercentage,	      0.08)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(45, 45))
#define		(kOuterNeutralPercentLand,		0.5)
#define		(kOuterNeutralPercentFlat,		Between(0.1, 0.1))
#define		(kOuterNeutralTreePercentage,	      0.09)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			2)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		3)

#define		(kAnimalPerPlayer,				0)
#define		(kAnimalPerNeutral,				0)

#define		(kBerryPerPlayer,				1)
#define		(kBerryPerNeutral,				0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				10)

#define		(kOilPerPlayer,					0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,				10)

#define		(kStonePerPlayer,				0)
#define		(kStonePerNeutral,				3)

#define		(kTreePerPlayer,				Between(2, 3))
#define		(kTreePerNeutral,				0)

//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				7.0)
#define		(kForestsPerPlayer,				2)
#define		(kForestChaosLevel,				1)
#define		(kMaxClumpsPerForest,			      2)


#elif Is9Players
//////////////////////////////////////////////////////////////////////
// 9 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			20)
#define		(kElevationScale,				Between(.5, 0.99))
#define		(kHeightMapChaos,					100.0)
											
//Variable MaxIntElevation 10-16.  At 8 the cliffs start deteriorating.

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		15.0)
#define		(kPlayerInnerRadius,			0.75)
#define		(kPlayerOuterRadius,			0.97)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.8, .9))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.015)

//PlayerPercentFlat needs to be 99% otherwise some players become completely enclosed by mountains

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.3)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(24, 24))
#define		(kInnerNeutralPercentLand,		0.15)
#define		(kInnerNeutralPercentFlat,		Between(0.88, 0.99))
#define		(kInnerNeutralTreePercentage,	      0.09)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//2 Land clumps are necessary, otherwise donuts are produced in the middle of the map.  I
//believe this is due to the fact that player land is set to 1.

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(16, 16))
#define		(kOuterNeutralPercentLand,		0.30)
#define		(kOuterNeutralPercentFlat,		Between(0.7, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.04)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//Variable NumOuterNeutrals 10-18.  14 is best.
//8 outer neutrals causes fewer larger hills to be created
//16 outer neutrals creates more smaller hill ridges around the outer portion of the map
//20 outer neutrals tends to form a ring around the inner neutral area
//
//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		4)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#define		(kBerryPerPlayer,				0)
#define		(kBerryPerNeutral,			1)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				1)

#define		(kGoldPerPlayer,				2)
#define		(kGoldPerNeutral,				16)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,		      16)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			8)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				14.0)
#define		(kForestsPerPlayer,				2 )
#define		(kForestChaosLevel,				0.5)
#define		(kMaxClumpsPerForest,			      2)


#elif Is10Players
//////////////////////////////////////////////////////////////////////
// 10 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			20)
#define		(kElevationScale,				Between(.5, 0.99))
#define		(kHeightMapChaos,					100.0)
											
//Variable MaxIntElevation 10-16.  At 8 the cliffs start deteriorating.

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		15.0)
#define		(kPlayerInnerRadius,			0.75)
#define		(kPlayerOuterRadius,			0.98)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.8, .9))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.015)

//PlayerPercentFlat needs to be 99% otherwise some players become completely enclosed by mountains

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.3)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(14, 14))
#define		(kInnerNeutralPercentLand,		0.15)
#define		(kInnerNeutralPercentFlat,		Between(0.9, 0.99))
#define		(kInnerNeutralTreePercentage,	      0.09)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//2 Land clumps are necessary, otherwise donuts are produced in the middle of the map.  I
//believe this is due to the fact that player land is set to 1.

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(22, 22))
#define		(kOuterNeutralPercentLand,		0.28)
#define		(kOuterNeutralPercentFlat,		Between(0.7, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.04)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//Variable NumOuterNeutrals 10-18.  14 is best.
//8 outer neutrals causes fewer larger hills to be created
//16 outer neutrals creates more smaller hill ridges around the outer portion of the map
//20 outer neutrals tends to form a ring around the inner neutral area
//
//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		4)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#define		(kBerryPerPlayer,				0)
#define		(kBerryPerNeutral,			1)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				1)

#define		(kGoldPerPlayer,				2)
#define		(kGoldPerNeutral,				16)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,		      16)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			8)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				14.0)
#define		(kForestsPerPlayer,				2 )
#define		(kForestChaosLevel,				0.5)
#define		(kMaxClumpsPerForest,			      2)


#elif Is11Players
//////////////////////////////////////////////////////////////////////
// 11 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			20)
#define		(kElevationScale,				Between(.5, 0.99))
#define		(kHeightMapChaos,					100.0)
											
//Variable MaxIntElevation 10-16.  At 8 the cliffs start deteriorating.

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		15.0)
#define		(kPlayerInnerRadius,			0.75)
#define		(kPlayerOuterRadius,			0.98)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.8, .9))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.015)

//PlayerPercentFlat needs to be 99% otherwise some players become completely enclosed by mountains

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.3)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(14, 14))
#define		(kInnerNeutralPercentLand,		0.15)
#define		(kInnerNeutralPercentFlat,		Between(0.95, 0.99))
#define		(kInnerNeutralTreePercentage,	      0.09)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//2 Land clumps are necessary, otherwise donuts are produced in the middle of the map.  I
//believe this is due to the fact that player land is set to 1.

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(20, 20))
#define		(kOuterNeutralPercentLand,		0.26)
#define		(kOuterNeutralPercentFlat,		Between(0.7, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.04)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//Variable NumOuterNeutrals 10-18.  14 is best.
//8 outer neutrals causes fewer larger hills to be created
//16 outer neutrals creates more smaller hill ridges around the outer portion of the map
//20 outer neutrals tends to form a ring around the inner neutral area
//
//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		4)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#define		(kBerryPerPlayer,				0)
#define		(kBerryPerNeutral,			1)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				1)

#define		(kGoldPerPlayer,				2)
#define		(kGoldPerNeutral,				16)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,		      16)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			8)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				14.0)
#define		(kForestsPerPlayer,				2 )
#define		(kForestChaosLevel,				0.5)
#define		(kMaxClumpsPerForest,			      2)


#elif Is12Players
//////////////////////////////////////////////////////////////////////
// 12 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			20)
#define		(kElevationScale,				Between(.5, 0.99))
#define		(kHeightMapChaos,					100.0)
											
//Variable MaxIntElevation 10-16.  At 8 the cliffs start deteriorating.

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		15.0)
#define		(kPlayerInnerRadius,			0.75)
#define		(kPlayerOuterRadius,			0.98)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.8, .9))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.015)

//PlayerPercentFlat needs to be 99% otherwise some players become completely enclosed by mountains

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.3)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(14, 14))
#define		(kInnerNeutralPercentLand,		0.15)
#define		(kInnerNeutralPercentFlat,		Between(0.95, 0.99))
#define		(kInnerNeutralTreePercentage,	      0.09)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//2 Land clumps are necessary, otherwise donuts are produced in the middle of the map.  I
//believe this is due to the fact that player land is set to 1.

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(18, 18))
#define		(kOuterNeutralPercentLand,		0.24)
#define		(kOuterNeutralPercentFlat,		Between(0.7, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.04)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//Variable NumOuterNeutrals 10-18.  14 is best.
//8 outer neutrals causes fewer larger hills to be created
//16 outer neutrals creates more smaller hill ridges around the outer portion of the map
//20 outer neutrals tends to form a ring around the inner neutral area
//
//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		4)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#define		(kBerryPerPlayer,				0)
#define		(kBerryPerNeutral,			1)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				1)

#define		(kGoldPerPlayer,				2)
#define		(kGoldPerNeutral,				16)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,		      16)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			8)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				14.0)
#define		(kForestsPerPlayer,				2 )
#define		(kForestChaosLevel,				0.5)
#define		(kMaxClumpsPerForest,			      2)


#elif Is13Players
//////////////////////////////////////////////////////////////////////
// 13 PLAYERS...r
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			20)
#define		(kElevationScale,				Between(.5, 0.99))
#define		(kHeightMapChaos,					100.0)
											
//Variable MaxIntElevation 10-16.  At 8 the cliffs start deteriorating.

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		15.0)
#define		(kPlayerInnerRadius,			0.75)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.8, .9))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.02)

//PlayerPercentFlat needs to be 99% otherwise some players become completely enclosed by mountains

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.3)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(16, 16))
#define		(kInnerNeutralPercentLand,		0.15)
#define		(kInnerNeutralPercentFlat,		Between(0.95, 0.99))
#define		(kInnerNeutralTreePercentage,	      0.09)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//2 Land clumps are necessary, otherwise donuts are produced in the middle of the map.  I
//believe this is due to the fact that player land is set to 1.

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(16, 16))
#define		(kOuterNeutralPercentLand,		0.24)
#define		(kOuterNeutralPercentFlat,		Between(0.7, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.04)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//Variable NumOuterNeutrals 10-18.  14 is best.
//8 outer neutrals causes fewer larger hills to be created
//16 outer neutrals creates more smaller hill ridges around the outer portion of the map
//20 outer neutrals tends to form a ring around the inner neutral area
//
//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		4)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#define		(kBerryPerPlayer,				0)
#define		(kBerryPerNeutral,			1)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				1)

#define		(kGoldPerPlayer,				2)
#define		(kGoldPerNeutral,				16)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,		      16)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			8)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				14.0)
#define		(kForestsPerPlayer,				2 )
#define		(kForestChaosLevel,				0.5)
#define		(kMaxClumpsPerForest,			      2)


#elif Is14Players
//////////////////////////////////////////////////////////////////////
// 14 PLAYERS...r
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			20)
#define		(kElevationScale,				Between(.5, 0.99))
#define		(kHeightMapChaos,					100.0)
											
//Variable MaxIntElevation 10-16.  At 8 the cliffs start deteriorating.

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		15.0)
#define		(kPlayerInnerRadius,			0.75)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.8, .9))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.02)

//PlayerPercentFlat needs to be 99% otherwise some players become completely enclosed by mountains

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.3)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(14, 14))
#define		(kInnerNeutralPercentLand,		0.15)
#define		(kInnerNeutralPercentFlat,		Between(0.95, 0.99))
#define		(kInnerNeutralTreePercentage,	      0.08)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//2 Land clumps are necessary, otherwise donuts are produced in the middle of the map.  I
//believe this is due to the fact that player land is set to 1.

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(16, 16))
#define		(kOuterNeutralPercentLand,		0.22)
#define		(kOuterNeutralPercentFlat,		Between(0.7, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.04)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//Variable NumOuterNeutrals 10-18.  14 is best.
//8 outer neutrals causes fewer larger hills to be created
//16 outer neutrals creates more smaller hill ridges around the outer portion of the map
//20 outer neutrals tends to form a ring around the inner neutral area
//
//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		4)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#define		(kBerryPerPlayer,				0)
#define		(kBerryPerNeutral,			1)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				1)

#define		(kGoldPerPlayer,				2)
#define		(kGoldPerNeutral,				16)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,		      16)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			8)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				14.0)
#define		(kForestsPerPlayer,				2 )
#define		(kForestChaosLevel,				0.5)
#define		(kMaxClumpsPerForest,			      2)


#elif Is15Players
//////////////////////////////////////////////////////////////////////
// 15 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			20)
#define		(kElevationScale,				Between(.5, 0.99))
#define		(kHeightMapChaos,					100.0)
											
//Variable MaxIntElevation 10-16.  At 8 the cliffs start deteriorating.

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		15.0)
#define		(kPlayerInnerRadius,			0.75)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.8, .9))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.02)

//PlayerPercentFlat needs to be 99% otherwise some players become completely enclosed by mountains

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.3)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(14, 14))
#define		(kInnerNeutralPercentLand,		0.15)
#define		(kInnerNeutralPercentFlat,		Between(0.95, 0.99))
#define		(kInnerNeutralTreePercentage,	      0.08)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//2 Land clumps are necessary, otherwise donuts are produced in the middle of the map.  I
//believe this is due to the fact that player land is set to 1.

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(16, 16))
#define		(kOuterNeutralPercentLand,		0.22)
#define		(kOuterNeutralPercentFlat,		Between(0.7, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.04)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//Variable NumOuterNeutrals 10-18.  14 is best.
//8 outer neutrals causes fewer larger hills to be created
//16 outer neutrals creates more smaller hill ridges around the outer portion of the map
//20 outer neutrals tends to form a ring around the inner neutral area
//
//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		4)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#define		(kBerryPerPlayer,				0)
#define		(kBerryPerNeutral,			1)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				1)

#define		(kGoldPerPlayer,				2)
#define		(kGoldPerNeutral,				16)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,		      16)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			8)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				14.0)
#define		(kForestsPerPlayer,				2 )
#define		(kForestChaosLevel,				0.5)
#define		(kMaxClumpsPerForest,			      2)


#elif Is16Players
//////////////////////////////////////////////////////////////////////
// 16 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			20)
#define		(kElevationScale,				Between(.5, 0.99))
#define		(kHeightMapChaos,					100.0)
											
//Variable MaxIntElevation 10-16.  At 8 the cliffs start deteriorating.

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		15.0)
#define		(kPlayerInnerRadius,			0.85)
#define		(kPlayerOuterRadius,			0.99)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.8, .9))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.02)

//PlayerPercentFlat needs to be 99% otherwise some players become completely enclosed by mountains

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.3)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(14, 14))
#define		(kInnerNeutralPercentLand,		0.15)
#define		(kInnerNeutralPercentFlat,		Between(0.95, 0.99))
#define		(kInnerNeutralTreePercentage,	      0.08)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//2 Land clumps are necessary, otherwise donuts are produced in the middle of the map.  I
//believe this is due to the fact that player land is set to 1.

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(16, 16))
#define		(kOuterNeutralPercentLand,		0.20)
#define		(kOuterNeutralPercentFlat,		Between(0.8, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.04)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//Variable NumOuterNeutrals 10-18.  14 is best.
//8 outer neutrals causes fewer larger hills to be created
//16 outer neutrals creates more smaller hill ridges around the outer portion of the map
//20 outer neutrals tends to form a ring around the inner neutral area
//
//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		4)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#define		(kBerryPerPlayer,				0)
#define		(kBerryPerNeutral,			1)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				1)

#define		(kGoldPerPlayer,				2)
#define		(kGoldPerNeutral,				16)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,		      16)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			8)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				14.0)
#define		(kForestsPerPlayer,				2 )
#define		(kForestChaosLevel,				0.5)
#define		(kMaxClumpsPerForest,			      2)


//////////////////////////////////////////////////////////////////////
// End of if...elif... command
#endif

#endif		// NOTDEFINED(PLAINS_GIGANTIC_RMV)
