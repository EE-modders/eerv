//////////////////////////////////////////////////////////////////////
//
// Highlands Huge.rmv
//
//
// Highlands definitions for large maps.
//
// Copyright (c) 2000, Stainless Steel Studios, Inc. All rights reserved.
// PROPRIETARY and CONFIDENTIAL.
//
// $Author: Scott Marison $
// $Date: 9/06/01 6:46p $
// $Revision: 26 $
// $Revision: 26 $
//   Adjusted Angle between team members 
// $Revision:
//  Revision: 13 Lowered elevation, added neutrals, pushed players outward,
//               lowered player outer radius, increased tree %, reduced
//               forest free radius, reduced resource to edge distance
//
//  Revision: 14 Used Highlands Small as the foundation.  Increased Neutral
//               islands and percent land
//  Revision: 15 revised for miniaturization
//  Revision: 16 Elevation 
//  Revision: 17 Revised # of resources 3 by 3
//  Revision: 18 8+ player adjustment and enhanced resource placement 
//  Revision: 19 General Adjustments
//  Revision: 20c Small Enhancements 
//  Revision: 21 Design Enhancements
//  Revision: 23 Reduced Resources
//  Revision: 24 Added Chance of steep cliffs 
//  Revision: 25 Two forage sites for Prehistoric Start 
//  Revision: 26 Evened-out resource distribution 
//  Revision: 26b Created neutral berry bushes for Prehistoric starts 
//  Revision: 26h Increased ally/resource distance 
//  Revision: 28 Moved resources 2 tiles further from Capitol
//  Revision: 29 Added gold and iron to 5+ player maps
//
//
//////////////////////////////////////////////////////////////////////

#if			NOTDEFINED(HIGHLANDS_HUGE_RMV)
#define		(HIGHLANDS_HUGE_RMV,1)

//////////////////////////////////////////////////////////////////////
// Definitions we are required to define for highlands maps
//////////////////////////////////////////////////////////////////////

ResourcePlacementLimit (Gold, 	8,	15)
ResourcePlacementLimit (Steel, 	8, 	15)
ResourcePlacementLimit (Stone, 	8, 	15)
ResourcePlacementLimit (Berry, 	7, 	12)
ResourcePlacementLimit (Fish, 	1,	50)
ResourcePlacementLimit (Tree, 	3, 	6)
ResourcePlacementLimit (Animal, 	7, 	15)

#if Is2Players
//////////////////////////////////////////////////////////////////////
// 2 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	5 

//////////////////////////////////////////////////////////////////////
// terrain definitions
#if		PERCENT(80)
  #define		(kMaxIntElevation,			10)
#else
  #define		(kMaxIntElevation,			16)
#endif

#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(40, 50))
											
#define		(kMinimumStartPositionToMapEdge	5)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)	
	
#define		(kConvergentSampleSize,			3) 
#define		(kConvergentThreshold,			20000)		

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		40.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.95)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.99, 0.99))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(1, 1))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 1))
#define		(kPlayerTreePercentage,			0.07)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(18, 18))
#define		(kInnerNeutralPercentLand,		0.25)
#define		(kInnerNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kInnerNeutralTreePercentage,	      0.2)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(46, 46))
#define		(kOuterNeutralPercentLand,		0.70)
#define		(kOuterNeutralPercentFlat,		0.9)
#define		(kOuterNeutralTreePercentage,	      0.15)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			3)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		3)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#if OR(IsPaleoEpoch, IsStoneEpoch) 
  #define  (kBerryPerPlayer,    1) 
  #define  (kBerryPerNeutral,	  6)
#else
  #define  (kBerryPerPlayer,    1)
  #define  (kBerryPerNeutral,	  0)
#endif 

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				9)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			9)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			3)

#define		(kTreePerPlayer,				1)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				10.0)
#define		(kForestsPerPlayer,				1)
#define		(kForestChaosLevel,				.01)
#define		(kMaxClumpsPerForest,			      3)

#elif Is3Players
//////////////////////////////////////////////////////////////////////
// 3 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	5 

//////////////////////////////////////////////////////////////////////
// terrain definitions
#if		PERCENT(80)
  #define		(kMaxIntElevation,			10)
#else
  #define		(kMaxIntElevation,			16)
#endif

#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(40, 50))
											
#define		(kMinimumStartPositionToMapEdge	5)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)	
	
#define		(kConvergentSampleSize,			32) 
#define		(kConvergentThreshold,			10)		
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		30.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.95)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.99, 0.99))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(1, 1))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 1))
#define		(kPlayerTreePercentage,			0.07)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,			Between(18, 18))
#define		(kInnerNeutralPercentLand,		0.25)
#define		(kInnerNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kInnerNeutralTreePercentage,	      0.2)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(44, 44))
#define		(kOuterNeutralPercentLand,		0.68)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.16)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			3)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#if OR(IsPaleoEpoch, IsStoneEpoch) 
  #define  (kBerryPerPlayer,    1) 
  #define  (kBerryPerNeutral,	  9)
#else
  #define  (kBerryPerPlayer,    1)
  #define  (kBerryPerNeutral,	  0)
#endif 


#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				12)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			12)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			4)

#define		(kTreePerPlayer,				1)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				10.0)
#define		(kForestsPerPlayer,				1)
#define		(kForestChaosLevel,				.01)
#define		(kMaxClumpsPerForest,			      3)

#elif Is4Players
//////////////////////////////////////////////////////////////////////
// 4 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	5 

//////////////////////////////////////////////////////////////////////
// terrain definitions
#if		PERCENT(80)
  #define		(kMaxIntElevation,			10)
#else
  #define		(kMaxIntElevation,			16)
#endif

#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(40, 50))
											
#define		(kMinimumStartPositionToMapEdge	5)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)	
	
#define		(kConvergentSampleSize,			32) 
#define		(kConvergentThreshold,			8)
					
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		30.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.95)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.99, 0.99))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(1, 1))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 1))
#define		(kPlayerTreePercentage,			0.07)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(18, 18))
#define		(kInnerNeutralPercentLand,		0.23)
#define		(kInnerNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kInnerNeutralTreePercentage,	      0.25)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(42, 42))
#define		(kOuterNeutralPercentLand,		0.67)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.16)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			3)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#if OR(IsPaleoEpoch, IsStoneEpoch) 
  #define  (kBerryPerPlayer,    1) 
  #define  (kBerryPerNeutral,	  7)
#else
  #define  (kBerryPerPlayer,    1)
  #define  (kBerryPerNeutral,	  0)
#endif 


#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				14)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			14)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			5)

#define		(kTreePerPlayer,				1)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				8.0)
#define		(kForestsPerPlayer,				1)
#define		(kForestChaosLevel,				.01)
#define		(kMaxClumpsPerForest,			      3)

#elif Is5Players
//////////////////////////////////////////////////////////////////////
// 5 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	5 

//////////////////////////////////////////////////////////////////////
// terrain definitions
#if		PERCENT(80)
  #define		(kMaxIntElevation,			10)
#else
  #define		(kMaxIntElevation,			16)
#endif

#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(35, 45))
											
#define		(kMinimumStartPositionToMapEdge	5)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)	
	
#define		(kConvergentSampleSize,			32) 
#define		(kConvergentThreshold,			10)		
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		30.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.95)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.99, 0.99))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(1, 1))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 1))
#define		(kPlayerTreePercentage,			0.07)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(18, 18))
#define		(kInnerNeutralPercentLand,		0.22)
#define		(kInnerNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kInnerNeutralTreePercentage,	      0.25)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(39, 39))
#define		(kOuterNeutralPercentLand,		0.65)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.16)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			3)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#if OR(IsPaleoEpoch, IsStoneEpoch) 
  #define  (kBerryPerPlayer,    1) 
  #define  (kBerryPerNeutral,	  9)
#else
  #define  (kBerryPerPlayer,    1)
  #define  (kBerryPerNeutral,	  0)
#endif 


#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				16)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			16)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			6)

#define		(kTreePerPlayer,				1)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				8.0)
#define		(kForestsPerPlayer,				1)
#define		(kForestChaosLevel,				.01)
#define		(kMaxClumpsPerForest,			      3)


#elif Is6Players
//////////////////////////////////////////////////////////////////////
// 6 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	5 

//////////////////////////////////////////////////////////////////////
// terrain definitions
#if		PERCENT(80)
  #define		(kMaxIntElevation,			10)
#else
  #define		(kMaxIntElevation,			16)
#endif

#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(35, 35))
											
#define		(kMinimumStartPositionToMapEdge	5)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)	
	
#define		(kConvergentSampleSize,			32) 
#define		(kConvergentThreshold,			10)
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		30.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.95)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.99, 0.99))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(1, 1))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 1))
#define		(kPlayerTreePercentage,			0.07)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(18, 18))
#define		(kInnerNeutralPercentLand,		0.21)
#define		(kInnerNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kInnerNeutralTreePercentage,	      0.29)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(36, 36))
#define		(kOuterNeutralPercentLand,		0.64)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.19)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			3)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#if OR(IsPaleoEpoch, IsStoneEpoch) 
  #define  (kBerryPerPlayer,    2)
#else
  #define  (kBerryPerPlayer,    1)
#endif 

#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				16)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			16)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			6)

#define		(kTreePerPlayer,				1)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				8.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				.01)
#define		(kMaxClumpsPerForest,			      3)


#elif Is7Players
//////////////////////////////////////////////////////////////////////
// 7 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	5 

//////////////////////////////////////////////////////////////////////
// terrain definitions
#if		PERCENT(80)
  #define		(kMaxIntElevation,			10)
#else
  #define		(kMaxIntElevation,			16)
#endif

#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(30, 30))
											
#define		(kMinimumStartPositionToMapEdge	5)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)	
	
#define		(kConvergentSampleSize,			32) 
#define		(kConvergentThreshold,			10)
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,	      30.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.95)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.99, 0.99))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(1, 1))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 1))
#define		(kPlayerTreePercentage,			0.07)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(18, 18))
#define		(kInnerNeutralPercentLand,		0.2)
#define		(kInnerNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kInnerNeutralTreePercentage,	      0.29)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(34, 34))
#define		(kOuterNeutralPercentLand,		0.62)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.19)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			3)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#if OR(IsPaleoEpoch, IsStoneEpoch) 
  #define  (kBerryPerPlayer,    2)
#else
  #define  (kBerryPerPlayer,    1)
#endif 

#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				18)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			18)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			7)

#define		(kTreePerPlayer,				1)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				8.0)
#define		(kForestsPerPlayer,				1)
#define		(kForestChaosLevel,				.01)
#define		(kMaxClumpsPerForest,			      3)

#elif Is8Players
//////////////////////////////////////////////////////////////////////
// 8 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	5 

//////////////////////////////////////////////////////////////////////
// terrain definitions
#if		PERCENT(80)
  #define		(kMaxIntElevation,			10)
#else
  #define		(kMaxIntElevation,			16)
#endif

#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(30, 30))
											
#define		(kMinimumStartPositionToMapEdge	5)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)	
	
#define		(kConvergentSampleSize,			32) 
#define		(kConvergentThreshold,			10)
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		30.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.95)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.99, .99))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(1, 1))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 1))
#define		(kPlayerTreePercentage,			0.07)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(18, 18))
#define		(kInnerNeutralPercentLand,		0.19)
#define		(kInnerNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kInnerNeutralTreePercentage,	      0.25)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(32, 32))
#define		(kOuterNeutralPercentLand,		0.61)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.15)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			3)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#if OR(IsPaleoEpoch, IsStoneEpoch) 
  #define  (kBerryPerPlayer,    2)
#else
  #define  (kBerryPerPlayer,    1)
#endif 

#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				21)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			21)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			7)

#define		(kTreePerPlayer,				1)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				10.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				.01)
#define		(kMaxClumpsPerForest,			      3)

#elif Is9Players
//////////////////////////////////////////////////////////////////////
// 9 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#if		PERCENT(80)
  #define		(kMaxIntElevation,			10)
#else
  #define		(kMaxIntElevation,			16)
#endif

#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(30, 30))
											
#define		(kMinimumStartPositionToMapEdge	5)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)	
	
#define		(kConvergentSampleSize,			5) 
#define		(kConvergentThreshold,			10)
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		40.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.95)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.99, .99))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(1, 1))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 1))
#define		(kPlayerTreePercentage,			0.07)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(18, 18))
#define		(kInnerNeutralPercentLand,		0.19)
#define		(kInnerNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kInnerNeutralTreePercentage,	      0.25)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(32, 32))
#define		(kOuterNeutralPercentLand,		0.56)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.15)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			3)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#if OR(IsPaleoEpoch, IsStoneEpoch) 
  #define  (kBerryPerPlayer,    2)
#else
  #define  (kBerryPerPlayer,    1)
#endif 

#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				24)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			24)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			7)

#define		(kTreePerPlayer,				1)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				10.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				.01)
#define		(kMaxClumpsPerForest,			      3)



#elif Is10Players
//////////////////////////////////////////////////////////////////////
// 10 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#if		PERCENT(80)
  #define		(kMaxIntElevation,			10)
#else
  #define		(kMaxIntElevation,			16)
#endif

#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(30, 30))
											
#define		(kMinimumStartPositionToMapEdge	5)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)	
	
#define		(kConvergentSampleSize,			5) 
#define		(kConvergentThreshold,			10)
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		40.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.95)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.99, .99))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(1, 1))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 1))
#define		(kPlayerTreePercentage,			0.07)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(18, 18))
#define		(kInnerNeutralPercentLand,		0.19)
#define		(kInnerNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kInnerNeutralTreePercentage,	      0.25)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(32, 32))
#define		(kOuterNeutralPercentLand,		0.5)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.15)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			3)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#if OR(IsPaleoEpoch, IsStoneEpoch) 
  #define  (kBerryPerPlayer,    2)
#else
  #define  (kBerryPerPlayer,    1)
#endif 

#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				13)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			13)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			7)

#define		(kTreePerPlayer,				1)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				10.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				.01)
#define		(kMaxClumpsPerForest,			      3)



#elif Is11Players
//////////////////////////////////////////////////////////////////////
// 11 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			15)
#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(30, 60))

#define		(kMinimumStartPositionToMapEdge	2)
#define		(kOuterPushFromMapCenter		31)
#define		(kInnerPushFromMapCenter 		0)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		24.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.95)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.8, .8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.08)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(18, 18))
#define		(kInnerNeutralPercentLand,		0.19)
#define		(kInnerNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kInnerNeutralTreePercentage,	      0.2)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(32, 32))
#define		(kOuterNeutralPercentLand,		0.61)
#define		(kOuterNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kOuterNeutralTreePercentage,	      0.15)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#define		(kBerryPerPlayer,				1)
#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				19)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			19)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			7)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				10.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				0.5)
#define		(kMaxClumpsPerForest,			      2)


#elif Is12Players
//////////////////////////////////////////////////////////////////////
// 12 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			15)
#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(30, 60))

#define		(kMinimumStartPositionToMapEdge	2)
#define		(kOuterPushFromMapCenter		31)
#define		(kInnerPushFromMapCenter 		0)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		24.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.95)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.8, .8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.08)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(18, 18))
#define		(kInnerNeutralPercentLand,		0.19)
#define		(kInnerNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kInnerNeutralTreePercentage,	      0.2)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(32, 32))
#define		(kOuterNeutralPercentLand,		0.61)
#define		(kOuterNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kOuterNeutralTreePercentage,	      0.15)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#define		(kBerryPerPlayer,				1)
#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				19)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			19)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			7)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				10.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				0.5)
#define		(kMaxClumpsPerForest,			      2)


#elif Is13Players
//////////////////////////////////////////////////////////////////////
// 13 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			15)
#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(30, 60))

#define		(kMinimumStartPositionToMapEdge	2)
#define		(kOuterPushFromMapCenter		31)
#define		(kInnerPushFromMapCenter 		0)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		24.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.95)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.8, .8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.08)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(18, 18))
#define		(kInnerNeutralPercentLand,		0.19)
#define		(kInnerNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kInnerNeutralTreePercentage,	      0.2)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(32, 32))
#define		(kOuterNeutralPercentLand,		0.61)
#define		(kOuterNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kOuterNeutralTreePercentage,	      0.15)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#define		(kBerryPerPlayer,				1)
#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				19)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			19)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			7)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				10.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				0.5)
#define		(kMaxClumpsPerForest,			      2)


#elif Is14Players
//////////////////////////////////////////////////////////////////////
// 14 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			15)
#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(30, 60))

#define		(kMinimumStartPositionToMapEdge	2)
#define		(kOuterPushFromMapCenter		31)
#define		(kInnerPushFromMapCenter 		0)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		24.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.95)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.8, .8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.08)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(18, 18))
#define		(kInnerNeutralPercentLand,		0.19)
#define		(kInnerNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kInnerNeutralTreePercentage,	      0.2)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(32, 32))
#define		(kOuterNeutralPercentLand,		0.61)
#define		(kOuterNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kOuterNeutralTreePercentage,	      0.15)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#define		(kBerryPerPlayer,				1)
#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				19)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			19)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			7)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				10.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				0.5)
#define		(kMaxClumpsPerForest,			      2)


#elif Is15Players
//////////////////////////////////////////////////////////////////////
// 15 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			15)
#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(30, 60))

#define		(kMinimumStartPositionToMapEdge	2)
#define		(kOuterPushFromMapCenter		31)
#define		(kInnerPushFromMapCenter 		0)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		24.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.95)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.8, .8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.08)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(18, 18))
#define		(kInnerNeutralPercentLand,		0.19)
#define		(kInnerNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kInnerNeutralTreePercentage,	      0.2)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(32, 32))
#define		(kOuterNeutralPercentLand,		0.61)
#define		(kOuterNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kOuterNeutralTreePercentage,	      0.15)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#define		(kBerryPerPlayer,				1)
#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				19)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			19)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			7)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				10.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				0.5)
#define		(kMaxClumpsPerForest,			      2)


#elif Is16Players
//////////////////////////////////////////////////////////////////////
// 16 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			15)
#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(30, 60))

#define		(kMinimumStartPositionToMapEdge	2)
#define		(kOuterPushFromMapCenter		31)
#define		(kInnerPushFromMapCenter 		0)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		24.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.95)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.8, .8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.08)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.2)
#define		(kNeutralOuterRadius,			0.5)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(18, 18))
#define		(kInnerNeutralPercentLand,		0.19)
#define		(kInnerNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kInnerNeutralTreePercentage,	      0.2)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(32, 32))
#define		(kOuterNeutralPercentLand,		0.61)
#define		(kOuterNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kOuterNeutralTreePercentage,	      0.15)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#define		(kBerryPerPlayer,				1)
#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				19)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			19)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			7)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				10.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				0.5)
#define		(kMaxClumpsPerForest,			      2)


//////////////////////////////////////////////////////////////////////
// End of if...elif... command
#endif

#endif		// NOTDEFINED(HIGHLANDS_HUGE_RMV)
