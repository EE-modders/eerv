//////////////////////////////////////////////////////////////////////
//
// Highlands Large.rmv
//
// Highlands definitions for Medium maps.
//
// Copyright (c) 2000, Stainless Steel Studios, Inc. All rights reserved.
// PROPRIETARY and CONFIDENTIAL.
//
// $Author: Scott Marison $
// $Date: 9/06/01 6:46p $
// $Revision: 29 $
// $Revision: 29 $
//   Adjusted Angle between team members 
// $Revision:
//  Revision: 13 Lowered elevation, added neutrals, pushed players outward,
//               lowered player outer radius, increased tree %, reduced
//               forest free radius, reduced resource to edge distance
//
//  Revision: 14 Used Highlands Small as the foundation.  Increased Neutral
//               islands and percent land
//  Revision: 15 Revised for miniaturization 
//  Revision: 16 Elevation 
//  Revision: 17 Revised # of resources 3 by 3
//  Revision: 18 8+ player adjustment and enhanced resource placement 
//  Revision: 19 General Tuning
//  Revision: 20 Reduced congestion 
//  Revision: 20c Small Enhancements
//  Revision: 21 Design Enhancements 
//  Revision: 23 Reduced Resources
//  Revision: 24 Added Chance of steep cliffs 
//  Revision: 25 Two forage sites for Prehistoric Start
//  Revision: 26 Evened-out resource distribution 
//  Revision: 26b Created neutral berry bushes for Prehistoric starts 
//  Revision: 26g Decreased trees in 3 player map
//  Revision: 26h Increased ally/resource distance
//  Revision: 28 Moved resources 2 tiles further from Capitol
//  Revision: 29 Added gold and iron to 5+ player maps 
//
//////////////////////////////////////////////////////////////////////

#if			NOTDEFINED(HIGHLANDS_LARGE_RMV)
#define		(HIGHLANDS_LARGE_RMV,1)

//////////////////////////////////////////////////////////////////////
// Definitions we are required to define for highlands maps
//////////////////////////////////////////////////////////////////////

ResourcePlacementLimit (Gold, 	8,	15)
ResourcePlacementLimit (Steel, 	8, 	15)
ResourcePlacementLimit (Stone, 	8, 	15)
ResourcePlacementLimit (Berry, 	7, 	12)
ResourcePlacementLimit (Fish, 	1,	50)
ResourcePlacementLimit (Tree, 	3, 	6)
ResourcePlacementLimit (Animal, 	7, 	15)

#if Is2Players
//////////////////////////////////////////////////////////////////////
// 2 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	5 

//////////////////////////////////////////////////////////////////////
// terrain definitions
#if		PERCENT(80)
  #define		(kMaxIntElevation,			9)
#else
  #define		(kMaxIntElevation,			15)
#endif

#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(25, 35))
											
#define		(kMinimumStartPositionToMapEdge	4)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)	
	
#define		(kConvergentSampleSize,			3) 
#define		(kConvergentThreshold,			15)

//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		32.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.9)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.9, 0.9))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(1, 1))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 1))
#define		(kPlayerTreePercentage,			0.001)

//                                                    0.001 is correct

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.3)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(10, 10))
#define		(kInnerNeutralPercentLand,		0.21)
#define		(kInnerNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kInnerNeutralTreePercentage,	      0.2)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(30, 30))
#define		(kOuterNeutralPercentLand,		0.6)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.2)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			3)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		3)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#if OR(IsPaleoEpoch, IsStoneEpoch) 
  #define  (kBerryPerPlayer,    1) 
  #define  (kBerryPerNeutral,	  6)
#else
  #define  (kBerryPerPlayer,    1)
  #define  (kBerryPerNeutral,	  0)
#endif 

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				8)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			8)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			3)

#define		(kTreePerPlayer,				1)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				8.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				.01)
#define		(kMaxClumpsPerForest,			      3)

#elif Is3Players
//////////////////////////////////////////////////////////////////////
// 3 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	5 

//////////////////////////////////////////////////////////////////////
// terrain definitions
#if		PERCENT(80)
  #define		(kMaxIntElevation,			9)
#else
  #define		(kMaxIntElevation,			15)
#endif

#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(25, 35))
											
#define		(kMinimumStartPositionToMapEdge	4)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)	

#define		(kConvergentSampleSize,			32) 
#define		(kConvergentThreshold,			10)		
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		40.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.9)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.9, 0.9))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(1, 1))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 1))
#define		(kPlayerTreePercentage,			0.1)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.3)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,			Between(10, 10))
#define		(kInnerNeutralPercentLand,		0.22)
#define		(kInnerNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kInnerNeutralTreePercentage,	      0.2)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(28, 28))
#define		(kOuterNeutralPercentLand,		0.63)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.15)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			3)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#if OR(IsPaleoEpoch, IsStoneEpoch) 
  #define  (kBerryPerPlayer,    1) 
  #define  (kBerryPerNeutral,	  8)
#else
  #define  (kBerryPerPlayer,    1)
  #define  (kBerryPerNeutral,	  0)
#endif 

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				11)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			11)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			4)

#define		(kTreePerPlayer,				1)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				8.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				.01)
#define		(kMaxClumpsPerForest,			      3)

#elif Is4Players
//////////////////////////////////////////////////////////////////////
// 4 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	5 

//////////////////////////////////////////////////////////////////////
// terrain definitions
#if		PERCENT(80)
  #define		(kMaxIntElevation,			9)
#else
  #define		(kMaxIntElevation,			15)
#endif

#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(25, 35))
											
#define		(kMinimumStartPositionToMapEdge	4)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)	

#define		(kConvergentSampleSize,			32) 
#define		(kConvergentThreshold,			8)	
					
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		40.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.9)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.9, 0.9))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(1, 1))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 1))
#define		(kPlayerTreePercentage,			0.1)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.3)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(10, 10))
#define		(kInnerNeutralPercentLand,		0.2)
#define		(kInnerNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kInnerNeutralTreePercentage,	      0.2)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(26, 26))
#define		(kOuterNeutralPercentLand,		0.62)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.2)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			3)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#if OR(IsPaleoEpoch, IsStoneEpoch) 
  #define  (kBerryPerPlayer,    1) 
  #define  (kBerryPerNeutral,	  8)
#else
  #define  (kBerryPerPlayer,    1)
  #define  (kBerryPerNeutral,	  0)
#endif 

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				13)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			13)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			5)

#define		(kTreePerPlayer,				1)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				8.0)
#define		(kForestsPerPlayer,				1)
#define		(kForestChaosLevel,				.01)
#define		(kMaxClumpsPerForest,			      3)

#elif Is5Players
//////////////////////////////////////////////////////////////////////
// 5 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	5 

//////////////////////////////////////////////////////////////////////
// terrain definitions
#if		PERCENT(80)
  #define		(kMaxIntElevation,			9)
#else
  #define		(kMaxIntElevation,			15)
#endif

#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(25, 35))
											
#define		(kMinimumStartPositionToMapEdge	4)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)	

#define		(kConvergentSampleSize,			32) 
#define		(kConvergentThreshold,			10)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		40.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.9)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.9, 0.9))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(1, 1))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 1))
#define		(kPlayerTreePercentage,			0.1)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.3)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(10, 10))
#define		(kInnerNeutralPercentLand,		0.20)
#define		(kInnerNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kInnerNeutralTreePercentage,	      0.2)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))


//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(24, 24))
#define		(kOuterNeutralPercentLand,		0.6)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.15)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			3)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#if OR(IsPaleoEpoch, IsStoneEpoch) 
  #define  (kBerryPerPlayer,    2)
#else
  #define  (kBerryPerPlayer,    1)
#endif 

#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				15)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			15)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			5)

#define		(kTreePerPlayer,				1)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				8.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				.01)
#define		(kMaxClumpsPerForest,			      3)


#elif Is6Players
//////////////////////////////////////////////////////////////////////
// 6 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	5 

//////////////////////////////////////////////////////////////////////
// terrain definitions
#if		PERCENT(80)
  #define		(kMaxIntElevation,			9)
#else
  #define		(kMaxIntElevation,			15)
#endif

#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(20, 25))
											
#define		(kMinimumStartPositionToMapEdge	4)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)	

#define		(kConvergentSampleSize,			32) 
#define		(kConvergentThreshold,			10)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		35.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.9)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.95, 0.95))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(1, 1))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 1))
#define		(kPlayerTreePercentage,			0.1)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.3)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(10, 10))
#define		(kInnerNeutralPercentLand,		0.19)
#define		(kInnerNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kInnerNeutralTreePercentage,	      0.2)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(22, 22))
#define		(kOuterNeutralPercentLand,		0.59)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.12)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			3)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#if OR(IsPaleoEpoch, IsStoneEpoch) 
  #define  (kBerryPerPlayer,    2)
#else
  #define  (kBerryPerPlayer,    1)
#endif 

#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				18)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			18)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			6)

#define		(kTreePerPlayer,				1)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				8.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				.01)
#define		(kMaxClumpsPerForest,			      3)


#elif Is7Players
//////////////////////////////////////////////////////////////////////
// 7 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	5 

//////////////////////////////////////////////////////////////////////
// terrain definitions
#if		PERCENT(80)
  #define		(kMaxIntElevation,			9)
#else
  #define		(kMaxIntElevation,			15)
#endif

#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(20, 25))
											
#define		(kMinimumStartPositionToMapEdge	4)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)	

#define		(kConvergentSampleSize,			32) 
#define		(kConvergentThreshold,			10)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,	      35.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.93)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(0.95, 0.95))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(1, 1))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 1))
#define		(kPlayerTreePercentage,			0.1)


//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.3)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(10, 10))
#define		(kInnerNeutralPercentLand,		0.2)
#define		(kInnerNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kInnerNeutralTreePercentage,	      0.21)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(20, 20))
#define		(kOuterNeutralPercentLand,		0.57)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.13)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			3)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#if OR(IsPaleoEpoch, IsStoneEpoch) 
  #define  (kBerryPerPlayer,    2)
#else
  #define  (kBerryPerPlayer,    1)
#endif 

#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				1)
#define		(kGoldPerNeutral,				18)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				1)
#define		(kSteelPerNeutral,			18)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			7)

#define		(kTreePerPlayer,				1)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				8.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				.01)
#define		(kMaxClumpsPerForest,			      3)

#elif Is8Players
//////////////////////////////////////////////////////////////////////
// 8 PLAYERS...
//////////////////////////////////////////////////////////////////////

ResourceSeperation	5 

//////////////////////////////////////////////////////////////////////
// terrain definitions
#if		PERCENT(80)
  #define		(kMaxIntElevation,			9)
#else
  #define		(kMaxIntElevation,			15)
#endif

#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(20, 25))
											
#define		(kMinimumStartPositionToMapEdge	4)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)		

#define		(kConvergentSampleSize,			32) 
#define		(kConvergentThreshold,			10)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		35.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.93)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.95, .95))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(1, 1))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 1))
#define		(kPlayerTreePercentage,			0.1)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.1)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(10, 10))
#define		(kInnerNeutralPercentLand,		0.17)
#define		(kInnerNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kInnerNeutralTreePercentage,	      0.2)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(18, 18))
#define		(kOuterNeutralPercentLand,		0.56)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.11)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			3)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#if OR(IsPaleoEpoch, IsStoneEpoch) 
  #define  (kBerryPerPlayer,    2)
#else
  #define  (kBerryPerPlayer,    1)
#endif 

#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				2)
#define		(kGoldPerNeutral,				12)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				2)
#define		(kSteelPerNeutral,			12)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			6)

#define		(kTreePerPlayer,				1)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				8.0)
#define		(kForestsPerPlayer,				1)
#define		(kForestChaosLevel,				.01)
#define		(kMaxClumpsPerForest,			      3)

#elif Is9Players
//////////////////////////////////////////////////////////////////////
// 9 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#if		PERCENT(80)
  #define		(kMaxIntElevation,			9)
#else
  #define		(kMaxIntElevation,			15)
#endif

#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(30, 30))
											
#define		(kMinimumStartPositionToMapEdge	4)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)		

#define		(kConvergentSampleSize,			5) 
#define		(kConvergentThreshold,			10)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		40.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.93)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.8, .8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(1, 1))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 1))
#define		(kPlayerTreePercentage,			0.1)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.1)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(10, 10))
#define		(kInnerNeutralPercentLand,		0.17)
#define		(kInnerNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kInnerNeutralTreePercentage,	      0.2)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(18, 18))
#define		(kOuterNeutralPercentLand,		0.5)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.11)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			3)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#if OR(IsPaleoEpoch, IsStoneEpoch) 
  #define  (kBerryPerPlayer,    2)
#else
  #define  (kBerryPerPlayer,    1)
#endif 

#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				2)
#define		(kGoldPerNeutral,				2)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				2)
#define		(kSteelPerNeutral,			2)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			6)

#define		(kTreePerPlayer,				1)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				8.0)
#define		(kForestsPerPlayer,				1)
#define		(kForestChaosLevel,				.01)
#define		(kMaxClumpsPerForest,			      3)


#elif Is10Players
//////////////////////////////////////////////////////////////////////
// 10 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#if		PERCENT(80)
  #define		(kMaxIntElevation,			9)
#else
  #define		(kMaxIntElevation,			15)
#endif

#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(30, 30))
											
#define		(kMinimumStartPositionToMapEdge	4)
#define		(kOuterPushFromMapCenter		25)
#define		(kInnerPushFromMapCenter 		0)		

#define		(kConvergentSampleSize,			5) 
#define		(kConvergentThreshold,			10)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		40.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.93)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.8, .8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(1, 1))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 1))
#define		(kPlayerTreePercentage,			0.1)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.1)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(10, 10))
#define		(kInnerNeutralPercentLand,		0.17)
#define		(kInnerNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kInnerNeutralTreePercentage,	      0.2)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(1, 1))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(18, 18))
#define		(kOuterNeutralPercentLand,		0.45)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.11)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(1, 1))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 1))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			3)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#if OR(IsPaleoEpoch, IsStoneEpoch) 
  #define  (kBerryPerPlayer,    2)
#else
  #define  (kBerryPerPlayer,    1)
#endif 

#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				2)
#define		(kGoldPerNeutral,				2)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				2)
#define		(kSteelPerNeutral,			2)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			6)

#define		(kTreePerPlayer,				1)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				8.0)
#define		(kForestsPerPlayer,				1)
#define		(kForestChaosLevel,				.01)
#define		(kMaxClumpsPerForest,			      3)


#elif Is11Players
//////////////////////////////////////////////////////////////////////
// 11 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			12)
#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(20, 60))

#define		(kMinimumStartPositionToMapEdge	2)
#define		(kOuterPushFromMapCenter		30)
#define		(kInnerPushFromMapCenter 		0)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		32.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.93)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.8, .8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.1)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.1)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(14, 14))
#define		(kInnerNeutralPercentLand,		0.17)
#define		(kInnerNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kInnerNeutralTreePercentage,	      0.2)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(28, 28))
#define		(kOuterNeutralPercentLand,		0.56)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.11)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#define		(kBerryPerPlayer,				1)
#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				2)
#define		(kGoldPerNeutral,				7)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				2)
#define		(kSteelPerNeutral,			7)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			6)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				8.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				0.5)
#define		(kMaxClumpsPerForest,			      2)


#elif Is12Players
//////////////////////////////////////////////////////////////////////
// 12 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			12)
#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(20, 60))

#define		(kMinimumStartPositionToMapEdge	2)
#define		(kOuterPushFromMapCenter		30)
#define		(kInnerPushFromMapCenter 		0)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		32.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.93)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.8, .8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.1)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.1)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(14, 14))
#define		(kInnerNeutralPercentLand,		0.17)
#define		(kInnerNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kInnerNeutralTreePercentage,	      0.2)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(28, 28))
#define		(kOuterNeutralPercentLand,		0.56)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.11)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#define		(kBerryPerPlayer,				1)
#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				2)
#define		(kGoldPerNeutral,				7)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				2)
#define		(kSteelPerNeutral,			7)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			6)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				8.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				0.5)
#define		(kMaxClumpsPerForest,			      2)


#elif Is13Players
//////////////////////////////////////////////////////////////////////
// 13 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			12)
#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(20, 60))

#define		(kMinimumStartPositionToMapEdge	2)
#define		(kOuterPushFromMapCenter		30)
#define		(kInnerPushFromMapCenter 		0)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		32.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.93)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.8, .8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.1)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.1)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(14, 14))
#define		(kInnerNeutralPercentLand,		0.17)
#define		(kInnerNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kInnerNeutralTreePercentage,	      0.2)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(28, 28))
#define		(kOuterNeutralPercentLand,		0.56)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.11)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#define		(kBerryPerPlayer,				1)
#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				2)
#define		(kGoldPerNeutral,				7)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				2)
#define		(kSteelPerNeutral,			7)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			6)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				8.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				0.5)
#define		(kMaxClumpsPerForest,			      2)

#elif Is14Players
//////////////////////////////////////////////////////////////////////
// 14 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			12)
#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(20, 60))

#define		(kMinimumStartPositionToMapEdge	2)
#define		(kOuterPushFromMapCenter		30)
#define		(kInnerPushFromMapCenter 		0)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		32.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.93)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.8, .8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.1)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.1)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(14, 14))
#define		(kInnerNeutralPercentLand,		0.17)
#define		(kInnerNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kInnerNeutralTreePercentage,	      0.2)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(28, 28))
#define		(kOuterNeutralPercentLand,		0.56)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.11)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#define		(kBerryPerPlayer,				1)
#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				2)
#define		(kGoldPerNeutral,				7)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				2)
#define		(kSteelPerNeutral,			7)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			6)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				8.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				0.5)
#define		(kMaxClumpsPerForest,			      2)


#elif Is15Players
//////////////////////////////////////////////////////////////////////
// 15 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			12)
#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(20, 60))

#define		(kMinimumStartPositionToMapEdge	2)
#define		(kOuterPushFromMapCenter		30)
#define		(kInnerPushFromMapCenter 		0)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		32.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.93)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.8, .8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.1)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.1)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(14, 14))
#define		(kInnerNeutralPercentLand,		0.17)
#define		(kInnerNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kInnerNeutralTreePercentage,	      0.2)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(28, 28))
#define		(kOuterNeutralPercentLand,		0.56)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.11)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)


#define		(kBerryPerPlayer,				1)
#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				2)
#define		(kGoldPerNeutral,				7)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				2)
#define		(kSteelPerNeutral,			7)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			6)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				8.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				0.5)
#define		(kMaxClumpsPerForest,			      2)


#elif Is16Players
//////////////////////////////////////////////////////////////////////
// 16 PLAYERS...
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// terrain definitions
#define		(kMaxIntElevation,			12)
#define		(kElevationScale,				Between(1, 1))
#define		(kHeightMapChaos,				Between(20, 60))

#define		(kMinimumStartPositionToMapEdge	2)
#define		(kOuterPushFromMapCenter		30)
#define		(kInnerPushFromMapCenter 		0)	
											
//////////////////////////////////////////////////////////////////////
// player definitions
#define		(kMaxAngleBetweenTeamMembers,		32.0)
#define		(kPlayerInnerRadius,			0.6)
#define		(kPlayerOuterRadius,			0.93)
#define		(kPlayerOptimalFactor,			Between(0.5, 0.8))
#define		(kPlayerPercentFlat,			Between(.8, .8))
#define		(kPlayerLandChaos,			0.8)
#define		(kPlayerLandClumps,			Between(2, 2))
#define		(kPlayerFlatChaos,			0.8)
#define		(kPlayerFlatClumps,			Between(1, 2))
#define		(kPlayerTreePercentage,			0.1)

//////////////////////////////////////////////////////////////////////
// inner neutral definitions
#define		(kNeutralInnerRadius,			0.1)
#define		(kNeutralOuterRadius,			0.4)
#define		(kNeutralOptimalFactor,			0.7)
#define		(kNumInnerNeutrals,                 Between(14, 14))
#define		(kInnerNeutralPercentLand,		0.17)
#define		(kInnerNeutralPercentFlat,		Between(0.8, 0.8))
#define		(kInnerNeutralTreePercentage,	      0.2)
#define		(kInnerNeutralLandChaos,		0.8)
#define		(kInnerNeutralLandClumps,		Between(2, 2))
#define		(kInnerNeutralFlatChaos,		0.8)
#define		(kInnerNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// outer neutral definitions
#define		(kNumOuterNeutrals,			Between(28, 28))
#define		(kOuterNeutralPercentLand,		0.56)
#define		(kOuterNeutralPercentFlat,		Between(0.9, 0.9))
#define		(kOuterNeutralTreePercentage,	      0.11)
#define		(kOuterNeutralLandChaos,		0.8)
#define		(kOuterNeutralLandClumps,		Between(2, 2))
#define		(kOuterNeutralFlatChaos,		0.8)
#define		(kOuterNeutralFlatClumps,		Between(1, 2))

//////////////////////////////////////////////////////////////////////
// resource definitions
#define		(kMaxResourceElevation,			4)
#define		(kResourceToEdgeDistance,		2)
#define		(kResourceToWaterDistance,		4)

#define		(kAnimalPerPlayer,			0)
#define		(kAnimalPerNeutral,			0)

#define		(kBerryPerPlayer,				1)
#define		(kBerryPerNeutral,			0)

#define		(kFishPerPlayer,				0)
#define		(kFishPerNeutral,				0)

#define		(kGoldPerPlayer,				2)
#define		(kGoldPerNeutral,				7)

#define		(kOilPerPlayer,				0)
#define		(kOilPerNeutral,				0)

#define		(kSteelPerPlayer,				2)
#define		(kSteelPerNeutral,			7)

#define		(kStonePerPlayer,				1)
#define		(kStonePerNeutral,			6)

#define		(kTreePerPlayer,				0)
#define		(kTreePerNeutral,				0)


//////////////////////////////////////////////////////////////////////
// forest definitions
#define		(kForestFreeRadius,				8.0)
#define		(kForestsPerPlayer,				1 )
#define		(kForestChaosLevel,				0.5)
#define		(kMaxClumpsPerForest,			      2)


//////////////////////////////////////////////////////////////////////
// End of if...elif... command
#endif

#endif		// NOTDEFINED(HIGHLANDS_LARGE_RMV)
